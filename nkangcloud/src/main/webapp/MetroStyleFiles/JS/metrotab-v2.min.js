/*!
=====================================

MetroTab by SONHLAB.com - version 2.2
website: http://sonhlab.com
Documentation: http://docs.sonhlab.com/metrotab-responsive-metro-ui-tabs/

=====================================
 */
(function(b) {
	var a = function(C, k) {
		var D = b.extend({}, b.fn.metrotabs.defaults, k);
		var p;
		var x;
		var m;
		var t;
		var B;
		var v;
		var A;
		var l = 0;
		var u;
		var w;
		var y;
		var f;
		if (D.moveout == "TopOrLeft") {
			v = "-1000px"
		} else {
			if (D.moveout == "BottomOrRight") {
				v = "1000px"
			}
		}
		if (D.movein == "TopOrLeft") {
			A = "-1000px"
		} else {
			if (D.movein == "BottomOrRight") {
				A = "1000px"
			}
		}
		if (D.scrollbarstyle != null) {
			var E = D.scrollbarstyle
		}
		var d = {};
		var s = {};
		var i = {};
		var c;
		if (D.mtEffect == "vertical") {
			s.top = v;
			d.top = A;
			i.top = 0
		} else {
			if (D.mtEffect == "horizontal") {
				s.left = v;
				d.left = A;
				i.left = 0
			} else {
				if (D.mtEffect == "fade") {
					s.opacity = 0;
					d.opacity = 0;
					i.opacity = 1
				}
			}
		}
		var o = 0;
		function g() {
			b(C).find(".mt-blocksholder").masonry({
				itemSelector : ".mt-tab",
				columnWidth : 100,
				isResizable : true,
				isAnimated : !Modernizr.csstransitions
			});
			o = 1
		}
		function j(e) {
			if (!b(e).hasClass("mt-active")) {
				B = b(e).attr("id");
				b(C).find(".mt-loadcontent").removeClass("mt-active");
				b(e).addClass("mt-active");
				b(C).find(".mt-loadcontent").toggleClass("mt-loadcontent mt-loadingcontent");
				b(C).find("." + D.ContentBlock)
						.animate(
								s,
								D.outduration,
								D.outeffect,
								function() {
									b(this).css(d);
									if (p < D.resWidth) {
										b(C).find("." + D.ContentBlock)
												.contents().remove()
									} else {
										b(C).find("." + D.ContentBlock).find(
												".jspContainer").find(
												".jspPane").contents().remove()
									}
									if (b("div[data-mtid='" + B + "']").length > 0) {
										if (p < D.resWidth) {
											b("div[data-mtid='" + B + "']")
													.contents()
													.clone()
													.appendTo(
															b(C)
																	.find(
																			"."
																					+ D.ContentBlock))
										} else {
											b("div[data-mtid='" + B + "']")
													.contents()
													.clone()
													.appendTo(
															b(C)
																	.find(
																			"."
																					+ D.ContentBlock)
																	.find(
																			".jspContainer")
																	.find(
																			".jspPane"))
										}
										b(C)
												.find("." + D.ContentBlock)
												.animate(
														i,
														D.induration,
														D.ineffect,
														function() {
															b(C)
																	.find(
																			".mt-loadingcontent")
																	.toggleClass(
																			"mt-loadcontent mt-loadingcontent");
															h()
														})
									} else {
										w = b(e).attr("data-ext");
										if (w === undefined) {
											w = D.mtFileExtension;
											y = "content/metrotab/ajaxstation."
													+ w;
											f = "mtcontent=" + B
										} else {
											y = "content/metrotab/" + B + "."
													+ w;
											f = ""
										}
										b("#mt-station").append(
												"<div data-mtid='" + B
														+ "'></div>");
										b
												.ajax({
													url : y,
													type : "POST",
													data : f,
													cache : false,
													success : function(G) {
														if (G) {
															if (b("div[data-mtid='"
																	+ B + "']").length > 0) {
																b(
																		"div[data-mtid='"
																				+ B
																				+ "']")
																		.append(
																				G);
																if (p < D.resWidth) {
																	b(
																			"div[data-mtid='"
																					+ B
																					+ "']")
																			.contents()
																			.clone()
																			.appendTo(
																					b(
																							C)
																							.find(
																									"."
																											+ D.ContentBlock))
																} else {
																	b(
																			"div[data-mtid='"
																					+ B
																					+ "']")
																			.contents()
																			.clone()
																			.appendTo(
																					b(
																							C)
																							.find(
																									"."
																											+ D.ContentBlock)
																							.find(
																									".jspContainer")
																							.find(
																									".jspPane"))
																}
																b(C)
																		.find(
																				"."
																						+ D.ContentBlock)
																		.animate(
																				i,
																				D.induration,
																				D.ineffect,
																				function() {
																					b(
																							".mt-loadingcontent")
																							.toggleClass(
																									"mt-loadcontent mt-loadingcontent");
																					h()
																				})
															}
														}
													},
													error : function(G) {
														alert("Error: Content not exist!");
														b(C)
																.find(
																		".mt-loadingcontent")
																.toggleClass(
																		"mt-loadcontent mt-loadingcontent")
													}
												})
									}
								})
			}
		}
		function h() {
			b(C).find("." + D.ContentBlock).find(".video-holder").each(
					function(I) {
						var e = new Array();
						var H = new Array();
						var G = new Array();
						e[I] = b(C).find("." + D.ContentBlock).find(
								".video-holder").eq(I).parent().width();
						H[I] = e[I];
						G[I] = H[I] * 9 / 16;
						b(C).find("." + D.ContentBlock).find(".video-holder")
								.eq(I).css({
									height : G[I] + "px"
								})
					})
		}
		if (!b("#mt-station").length) {
			b("body").append("<div id='mt-station'></div>");
			b("#mt-station").css({
				display : "none"
			})
		}
		function n() {
			p = b(C).width();
			if (o == 1) {
				b(C).find(".mt-blocksholder").masonry("destroy");
				o = 0
			}
			if (p < D.resWidth) {
				b(C).find(".mt-blocksholder").css({
					display : "none",
					width : "100%"
				});
				b(C).find(".mt-contentblockstyle").css({
					display : "block",
					padding : "10px"
				});
				b(C).find("." + D.ContentBlock).css({
					height : "auto"
				});
				b(C)
						.find(".mt-blocksholder")
						.before(
								"<div class='mt-minibar "
										+ D.minibarbg
										+ "' onclick='javascript:hideAll(this);'><img src='../MetroStyleFiles/image/mt-icon.png' alt='metrotab' /><span>"
										+ D.minibartitle
										+ "</span><img src='../MetroStyleFiles/image/rightarrow.png' class='floatright' alt='show metrotab' /></div>");
				b(C)
						.find(".mt-minibar")
						.on(
								"click",
								function() {
									if (l == 0) {
										b(C).find(".mt-contentblock").css({
											display : "none"
										});
										b(C)
												.find(".mt-blocksholder")
												.fadeIn(
														200,
														function() {
															l = 1;
															b(C)
																	.find(
																			".mt-blocksholder")
																	.find(
																			".mt-loadcontent")
																	.on(
																			"click",
																			function() {
																				if (p < D.resWidth) {
																					j(this);
																					b(
																							C)
																							.find(
																									".mt-blocksholder")
																							.css(
																									{
																										display : "none"
																									});
																					b(
																							C)
																							.find(
																									".mt-contentblock")
																							.fadeIn(
																									200,
																									function() {
																										l = 0
																									})
																				}
																			})
														})
									} else {
										b(C).find(".mt-blocksholder").css({
											display : "none"
										});
										b(C).find(".mt-contentblock").fadeIn(
												200, function() {
													l = 0
												})
									}
								});
				g()
			} else {
				b(C).find(".mt-blocksholder").css({
					display : "block",
					width : D.blkwidth + "px"
				});
				b(C).find(".mt-contentblock").css({
					display : "block",
					padding : "5px"
				});
				g();
				x = b(C).find(".mt-blocksholder").width();
				t = p - x - 10;
				$contentHeight = b(C).find(".mt-blocksholder").height() - 10;
				b(C).find(".mt-contentblock").css({
					height : $contentHeight + "px",
					width : t + "px"
				});
				b(C).find("." + D.ContentBlock).css({
					height : $contentHeight + "px"
				});
				b(C).find("." + D.ContentBlock).children().css({
					width : "auto"
				});
				b(C).find(".mt-blocksholder").find(".mt-loadcontent").on(
						"click", function() {
							if (p >= D.resWidth) {
								j(this)
							}
						})
			}
		}
		n();
		var F = b(C).find(".mt-active:first").attr("id");
		if (!b("#mt-station").find("div[data-mtid='" + F + "']").length) {
			b("#mt-station").append("<div data-mtid='" + F + "'></div>");
			w = b(C).find(".mt-active:first").attr("data-ext");
			if (w === undefined) {
				w = D.mtFileExtension;
				y = "content/metrotab/ajaxstation." + w;
				f = "mtcontent=" + F
			} else {
				y = "content/metrotab/" + F + "." + w;
				f = ""
			}
			b.ajax({
				url : y,
				type : "POST",
				data : f,
				cache : false,
				success : function(e) {
					if (e) {
						if (b("div[data-mtid='" + F + "']").length > 0) {
							b("div[data-mtid='" + F + "']").append(e);
							b("div[data-mtid='" + F + "']").contents().clone()
									.appendTo(b(C).find("." + D.ContentBlock));
							r()
						}
					}
				}
			})
		} else {
			b("div[data-mtid='" + F + "']").contents().clone().appendTo(
					b(C).find("." + D.ContentBlock));
			r()
		}
		function r() {
			if (p < D.resWidth) {
				u == undefined;
				h()
			} else {
				u = b(C).find("." + D.ContentBlock).jScrollPane({
					showArrows : false,
					maintainPosition : false,
					autoReinitialise : true
				}).data("jsp");
				b(C).find("." + D.ContentBlock).hover(function() {
					b(C).find(".jspDrag").addClass(D.scrollbarstyle)
				}, function() {
					b(C).find(".jspDrag").removeClass(D.scrollbarstyle)
				})
			}
		}
		function q() {
			var H = -1;
			if (navigator.appName == "Microsoft Internet Explorer") {
				var e = navigator.userAgent;
				var G = new RegExp("MSIE ([0-9]{1,}[.0-9]{0,})");
				if (G.exec(e) != null) {
					H = parseFloat(RegExp.$1)
				}
			}
			return H
		}
		var z = q();
		if (z < 0 || z > 8) {
			b(window)
					.resize(
							function() {
								var e = b(window).width();
								if (p != e) {
									p = e;
									b(C).find(".mt-minibar").remove();
									b(C).find(".mt-blocksholder").css({
										display : "none"
									});
									b(C).find(".mt-contentblock").css({
										width : "auto",
										height : "auto"
									});
									b(C).find("." + D.ContentBlock).css({
										width : "auto",
										height : "auto"
									});
									if (o == 1) {
										b(C).find(".mt-blocksholder").masonry(
												"destroy");
										o = 0
									}
									b(C).find("." + D.ContentBlock).find(
											".jspContainer").find(".jspPane")
											.contents().remove();
									b(C).find("." + D.ContentBlock).contents()
											.remove();
									l = 0;
									if (u !== undefined) {
										u.destroy()
									}
									n();
									if (p >= D.resWidth) {
										if (!b(C).find("." + D.ContentBlock).length) {
											b(C)
													.find(".mt-contentblock")
													.append(
															"<div class='mt-content'></div>")
										}
										B = b(C).find(".mt-active").attr("id");
										b("div[data-mtid='" + B + "']")
												.contents()
												.clone()
												.appendTo(
														b(C)
																.find(
																		"."
																				+ D.ContentBlock));
										u = b(C).find("." + D.ContentBlock)
												.jScrollPane({
													showArrows : false,
													maintainPosition : false,
													autoReinitialise : true
												}).data("jsp");
										b(C)
												.find("." + D.ContentBlock)
												.hover(
														function() {
															b(C)
																	.find(
																			".jspDrag")
																	.addClass(
																			D.scrollbarstyle)
														},
														function() {
															b(C)
																	.find(
																			".jspDrag")
																	.removeClass(
																			D.scrollbarstyle)
														})
									} else {
										if (!b(C).find("." + D.ContentBlock).length) {
											b(C)
													.find(".mt-contentblock")
													.append(
															"<div class='"
																	+ D.ContentBlock
																	+ "'></div>")
										}
										B = b(C).find(".mt-active").attr("id");
										b("div[data-mtid='" + B + "']")
												.contents()
												.clone()
												.appendTo(
														b(C)
																.find(
																		"."
																				+ D.ContentBlock))
									}
									h()
								}
							})
		}
	};
	b.fn.metrotabs = function(c) {
		return this.each(function(e, f) {
			if (b(this).data("metrotabs")) {
				return b(this).data("metrotabs")
			}
			var d = new a(this, c);
			b(this).data("metrotabs", d)
		})
	};
	b.fn.metrotabs.defaults = {
		ContentBlock : "mt-content",
		mtFileExtension : "php",
		mtEffect : "vertical",
		moveout : "TopOrLeft",
		movein : "BottomOrRight",
		outeffect : "easeInBack",
		ineffect : "easeOutBack",
		outduration : 400,
		induration : 400,
		scrollbarstyle : "solid-blue",
		blkwidth : 300,
		resWidth : 768,
		minibarbg : "solid-blue-2",
		minibartitle : ""
	}
})(jQuery);